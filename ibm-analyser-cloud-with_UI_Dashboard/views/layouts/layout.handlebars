<!DOCTYPE html>
<html lang="en">
<head>
  <title>HUL Dashboard</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Ubuntu">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <style>
 	.btn-glyphicon { padding:8px; background:#ffffff; margin-right:4px; }
 	.icon-btn { padding: 1px 15px 3px 2px; border-radius:50px;}

 	/*#insert9{
 		background-image: url("../assets/images/bgimage.png");
 	}*/

 	.wrapper{
      display:grid;
      /* grid-template-columns:1fr 1fr 1fr;*/
      grid-template-columns:1fr;
      grid-gap:1em;
      /* grid-auto-rows:100px; */
      grid-auto-rows: minmax(100px, auto);
    }

    .wrapper > div{
      background:#EAF0F1;
      padding:1em;
      border:#333 1px solid;
      
    }

    /*.wrapper > div:nth-child(odd){
      background:#ddd;
    }*/

    .wrapper1{
      display:grid;
      grid-template-columns:1fr 1fr 1fr;
      /*grid-template-columns:repeat(3, 1fr);*/
      grid-gap:1em;
      /* grid-auto-rows:100px; */
      grid-auto-rows: minmax(100px, 600px);
    }

    .wrapper1 > div{
      background:#EAF0F1;
      padding:1em;
      border:#333 1px solid;
      
    }

    .wrapper2{
      display:grid;
      grid-template-columns:1fr 1fr 1fr;
      /*grid-template-columns:repeat(3, 1fr);*/
      grid-gap:1em;
      /* grid-auto-rows:100px; */
      grid-template-rows: minmax(100px, 500px);
    }

    .wrapper2 > div{
      background:#EAF0F1;
      padding:1em;
      border:#333 1px solid;
      
    }

    .wrapper3{
      display:grid;
      grid-template-columns:1fr 1fr 1fr;
      /*grid-template-columns:repeat(3, 1fr);*/
      grid-gap:1em;
      /* grid-auto-rows:100px; */
      grid-auto-rows: minmax(100px, 500px);
    }

    .wrapper3 > div{
      background:#EAF0F1;
      padding:1em;
      border:#333 1px solid;
      
    }

    .nested{
      display:grid;
      grid-template-columns:1fr;
      grid-auto-rows: minmax(100px, 200px);
      grid-gap:1em;
    }

    #insert8{
    	overflow-y: auto;
		height: 500px;
    }
    .container{
    	width:220px;
    	height:40px;
    }

    /*body
    {
    	background-image: url("bgimage.png");
    }*/

    .page-header {
    font-size: 20px;
    color: #EAF0F1;
}
	#search{
		border-style: ridge;
	}

	body{
  	font-family: 'Ubuntu', serif;
  	font-size: 14px;
	}
	
	#header{
		margin: auto;
		height: 50px;
    	width: auto;
    	color:#ffffff;
    	background-color: #000000;
    	display: flex;
    justify-content: center;
    align-items: center;
	}

	#insert10{
		margin: auto;
		height: 50px;
    	width: auto;
    	color:#ffffff;
    	background-color: #000000;
    	display: flex;
    justify-content: center;
    align-items: center;
	}

	.required{
		color: #45CE30;
	}
    
  </style>  
</head>
<body bgcolor="#25CCF7">
<div id="header" class="container2"><br>
    	<h4 id="label" align="center">SHADE ENGINE</h4>      
</div>
<div class="container1">
  <form action="#menu1" id="search" class="form-inline" onsubmit="demo()">
		<div class="form-group">
			<label class="required" for="Twitter ID">Twitter ID:</label>&nbsp;&nbsp;&nbsp;
<input type="text" style="margin:5px;" class="form-control" placeholder="E.g. amitabhtiwari3" id="tid">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          	<label class="required" for="Medium ID">Medium ID:</label>&nbsp;&nbsp;&nbsp;
<input type="text" style="margin:5px;" class="form-control" placeholder="E.g. oldirony" id="mid">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          	<label class="required" for="Instagram ID">Instagram ID:</label>&nbsp;&nbsp;&nbsp;
<input type="text" style="margin:5px;" class="form-control" placeholder="E.g. amita_pandey" id="iid">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
			<!--<button type="submit"  class="btn btn-primary"><span class="glyphicon glyphicon-search"></span> Submit</button>-->
			<button type="submit" style="margin:5px;" class="btn btn-primary">Submit</button>&nbsp;&nbsp;
		</div>
	</form>
	</div>
<div class="wrapper">
	<div id="labelwrap">
		<h4 align="center"><span class = "label label-primary">Personality Insights</span></h4>
		<div id="insert"></div>
	</div>
</div>
<div class="wrapper1">
	<div id="labelwrap1">
		<h4 align="center"><span class = "label label-primary">Feelings from Tweets </span></h4>
		<div id="insert2"></div><br><br>
		<textarea rows="2" cols="60" style="text-align:left;" readonly>
From the tweets, it tells things which you are tweeting positive about, things which you are tweeting negative about and neutral things.
		</textarea>
	</div>
	<div id="labelwrap2">
		<h4 align="center"><span class = "label label-primary">Datewise Emotions about your Tweets </span></h4>
		<div id="insert4"></div><br>
		<textarea rows="2" cols="80" readonly>
Above bar graph shows emotions in percentages derived from your tweets of last 7 days.
		</textarea>
	</div>
	<div id="labelwrap3">
		<h4 align="center"><span class = "label label-primary">Entities in your Tweets </span></h4>
		<div id="insert3"></div><br>
		<textarea rows="3" cols="45" readonly>
Above donut chart shows various types of entities you are tweeting about including instances of those entities.
		</textarea>
	</div>
</div>

<div class="wrapper2">
	<div id="labelwrap9">
		<h4 align="center"><span class = "label label-primary">Tips From Recommender </span></h4>
		<div id="insert9"></div>
	</div>
	<div id="labelwrap4">
		<h4 align="center"><span class = "label label-primary">Emotions thorugh Instagram</span></h4>
		<div id="insert1"></div><br>
		<textarea rows="2" cols="80" readonly>
Above pie-chart shows emotions expressed through pictures shared on instagram.
		</textarea>
	</div>
	<div id="labelwrap6">
		<h4 id="youtube_title" align="center"><span class = "label label-primary">Videos For     </span></h4>
		<div id="insert6"></div>
	</div>
</div>
<div class="wrapper3">
	<div id="insert8"></div>
	<div id="nested">
		<div id="insert5"></div><br><br><br><br>
		<textarea id="yogatext" rows="6" cols="80" readonly=""></textarea>
	</div>
	<div id="labelwrap7">
		<h4 id="youtube_title11" align="center"><span class = "label label-primary">Songs For     </span></h4>
		<div id="insert7"></div>
	</div>
</div>
<div class="wrapper4">
	<div id="insert10">
		<h4 id="label" align="center">&#169; - Brogrammers - A SHADE Engine developed by Team Brogrammers</h4>
		<!--<input type="text" size="50" value="&#169; - Brogrammers - A SHADE Engine developed by Team Brogrammers" readonly>-->
	</div>
</div><br>

 <script type="text/javascript">
  	var emotion = [0,0,0,0,0,0];
  	var res = "";
  	var feeling = "";
  	//var tid="1";var mid="2";var iid="3";
  	var tid="";var mid="";var iid="";
  	var lati="";var longi="";
  	var locflag=0;

  	$(document).ready(function(){
     	/*$(".wrapper").hide();
     	$(".wrapper1").hide();
     	$(".wrapper2").hide();
     	$(".wrapper3").hide();*/
     	$("#labelwrap").hide();
		$("#labelwrap1").hide();
		$("#labelwrap2").hide();
		$("#labelwrap3").hide();
		$("#labelwrap4").hide();
		$("#labelwrap9").hide();
		$("#labelwrap6").hide();
		$("#insert8").hide();
		$("#nested").hide();
		$("#labelwrap7").hide();

	});

  function getLocation()
  {
  		console.log("getLocation");

  		/*navigator.geolocation.getCurrentPosition(success, error,{timeout:600});

  		if (!navigator.geolocation)
  		{
    		console.log("Geolocation is not supported by your browser");
    		return;
  		}

  		function success(position)
  		{
  			locflag = 1;
    		lati  = position.coords.latitude;
    		longi = position.coords.longitude;
  		}

  		function error()
  		{
    		console.log("Unable to retrieve your location");
  		}*/

  		if(navigator.geolocation)
  		{
  			navigator.geolocation.getCurrentPosition(function(position){
  				locflag = 1;
    		lati  = position.coords.latitude;
    		longi = position.coords.longitude;
    		console.log("hold");
  			});
  		}
  		else
  			console.log("geolocation is not supported");
  		
  }



  function demo()
  {
  	 console.log("demo");
  	 //google.charts.load("current", {packages:["corechart"]});
  	 //var articles_url="https://api.mlab.com/api/1/databases/ibm/collections/aggregate?apiKey=WOHHCPMZkpDGw3EfKOIOYCZ7eA25aiLf";
  	 var one=0;var two=0;var three=0;
  	 var one_url="empty";var two_url="empty";var three_url="empty";
  	 var arr = new Array();
  	 
  	 tid = document.getElementById("tid").value;
  	 mid = document.getElementById("mid").value;
  	 iid = document.getElementById("iid").value;

  	 if(tid == "" || mid == "" || iid=="")
  	 {
  	 	alert("Please Enter all 3 social handles");
  	 	return false;
  	 }

  	 getLocation();
  	 	/*if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
              lati: position.coords.latitude;
              longi: position.coords.longitude;
          });
      }*/
           

  	 	/*$(".wrapper").show();
     	$(".wrapper1").show();
     	$(".wrapper2").show();
     	$(".wrapper3").show();*/
     	
		var uri = "https://ibmanalyser.eu-gb.mybluemix.net/users/readProfile/"+tid+"/"+mid+"/"+iid;
		var uri1 = "https://api.mlab.com/api/1/databases/ibm/collections/aggregate?apiKey=WOHHCPMZkpDGw3EfKOIOYCZ7eA25aiLf";
  	 var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200)
				{
					console.log("IBM Aggregator Succeeded");
					//ibm aggregator response has come, now calling ibm analyser
					//$.ajaxSetup({async:false});
					var xhttp1 = new XMLHttpRequest();
					xhttp1.onreadystatechange = function() {
						if(this.readyState == 4 && this.status == 200)
						{
							console.log("IBM Analyser Succeeded");
							var xhttp2 = new XMLHttpRequest();
							xhttp2.onreadystatechange = function() {
								if(this.readyState == 4 && this.status == 200)
								{

								

					/*$.ajax({
		   					type: "GET",
		   					dataType: "json",
		   					url: uri,
         					success: function (data) {*/
							
							
							// var uri1 = "https://api.mlab.com/api/1/databases/ibm/collections/aggregate?apiKey=WOHHCPMZkpDGw3EfKOIOYCZ7eA25aiLf";
							 
							/*$.ajax({
		   					type: "GET",
		   					dataType: "json",
		   					url: uri1,
         					success: function (data) {*/
         						//ibm analyser response has come
							console.log("mlab Succeeded");
						var response = xhttp2.responseText;
						res=JSON.parse(response);
						console.log("length:"+res.length);
					
					for(var j=0;j<res.length;j++)
					{
						if(tid == res[j].twitterid && mid == res[j].mediumid && iid == res[j].instagramid)
						{
							for(var i=0;i<res[j].posts.length;i++)
							{
								
								var no=res[j].posts[i].likes;
								if(no > one)
								{
									three = two;
									two = one;
									one = no;
									one_url = res[j].posts[i].url;
								}
								else if(no > two)
								{
									three = two;
									two = no;
									two_url = res[j].posts[i].url;	
								}
								else if(no > three)
								{
									three = no;
									three_url = res[j].posts[i].url;
								}
							}

							for(var k=0;k<res[j].tweets.length;k++)
							{
								for(var m=0;m<res[j].tweets[k].tone_analyser.length;m++)
								{
									var local = res[j].tweets[k].tone_analyser[m].name;
									if(local == "Neutral")
										emotion[5] = emotion[5] + 1;
									else if(local == "Sad")
										emotion[1] = emotion[1] + 1;
									else if(local == "Anger")
										emotion[2] = emotion[2] + 1;
									else if(local == "Fear")
										emotion[3] = emotion[3] + 1;
									else if(local == "Disgust")
										emotion[4] = emotion[4] + 1;
									else
										emotion[0] = emotion[0] + 1;
								}
							}
						}
					}

						arr[0] = one_url;
						arr[1] = two_url;
						arr[2] = three_url;
						//console.log(arr+"\n\n");
						var score = 0;
						for(var x=0;x<6;x++)
						{
							if(score < emotion[x] && x == 0)
							{
								feeling = "Joy";
								score = emotion[x];
							}
							else if(score < emotion[x] && x == 1)
							{
								feeling = "Sad";
								score = emotion[x];
							}
							else if(score < emotion[x] && x == 2)
							{
								feeling = "Anger";
								score = emotion[x];
							}
							else if(score < emotion[x] && x == 3)
							{
								feeling = "Fear";
								score = emotion[x];
							}
							else if(score < emotion[x] && x == 4)
							{
								feeling = "Disgust";
								score = emotion[x];
							}
							else if(score < emotion[x] && x == 5)
							{
								feeling = "Neutral";
								score = emotion[x];
							}
						}


				var xyz = "";
				var xyz11 = "";

				if(feeling == "Neutral")
					xyz = "Videos For Happiness"+"\n";
				else
					xyz = "Videos For " + feeling+"\n";

				if(feeling == "Neutral")
					xyz11 = "Songs For Happiness"+"\n";
				else
					xyz11 = "Songs For " + feeling+"\n";

				
				console.log(feeling+" "+emotion);
				var up = "";
				var up11= "";
		up = up.concat("<div>").concat("<h4 align=\"center\"><span class=\"label label-primary\">").concat(xyz).concat("</span>").concat("</h4>").concat("</div");
		up11 = up11.concat("<div>").concat("<h4 align=\"center\"><span class=\"label label-primary\">").concat(xyz11).concat("</span>").concat("</h4>").concat("</div");
						document.getElementById('youtube_title').innerHTML = up;
						document.getElementById('youtube_title11').innerHTML = up11;

						//For Personality Insights
						$("#labelwrap").show();
						google.charts.load("current", {packages:["bar"]});
      					google.charts.setOnLoadCallback(drawBar);

      					//For nlu keywords
      					$("#labelwrap1").show();
      					google.charts.load("current", {packages:["corechart"]});
      					google.charts.setOnLoadCallback(drawExploding);
						
						//For stacked bar-graph Datewise Tweets
						$("#labelwrap2").show();
						google.charts.load('current', {packages: ['corechart', 'bar']});
						google.charts.setOnLoadCallback(drawChart);

						// For nlu entities
						$("#labelwrap3").show();
						google.charts.load("current", {packages:["corechart"]});
      					google.charts.setOnLoadCallback(drawDonutChart);

      					
      					$("#labelwrap4").show();
      					//For instagram photos
      					google.charts.load("current", {packages:["corechart"]});
      					google.charts.setOnLoadCallback(draw3DPieChart);

      					$("#labelwrap9").show();
      					articles();
      					$("#labelwrap6").show();
      					videos();
      					$("#insert8").show();
						places();
						$("#nested").show();
						yogas();
						$("#labelwrap7").show();
      					songs();
      					
      					
      				}
				};
				xhttp2.open("GET",uri1,true);
				xhttp2.send();	
			}
		};
		xhttp1.open("GET",uri,true);
		xhttp1.send();	
					/*},
					error: function (data) {
                         console.log('An inner error occurred.');
                         console.log(data);
                         alert("error");
                     },
                });

				},
				error: function (data) {
                         console.log('An error occurred.');
                         console.log(data);
                         alert("error");
                     },
                });*/
				}
		};
		xhttp.open("GET","https://ibm-aggregator.herokuapp.com/aggregate/"+mid+"/"+tid+"/"+iid, true);
		xhttp.send();
  }//end of demo

  function videos()
  {
  
  var x="";
  var t=Math.floor(Math.random() * (3-1 + 1) + 1);
  console.log(t);
  if(t==1)
  x="just for laughs gags 2018";
  else if(t==2)
  x="charlie chaplin cartoon series";
  else
  x="mr bean videos in english";
  var merchant="";
  
  var video_url="https://ibm-analyser.herokuapp.com/youtube/"+x;
  var video_area="";
  
		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200)
				{
					var response = xhttp.responseText;
					var res=JSON.parse(response);-
					console.log(res);
					var title,desc,image,link;
					
					for(var i=0;i<res.videos.length;i++)
					{
						title=res.videos[i].title;
						desc=res.videos[i].description; 
						image=res.videos[i].preview;
						link="https://"+res.videos[i].link;
						if(desc.length > 80)
						desc=desc.substr(0,80);
						if(desc=="")
						desc="Just for fun videos";
						var t = title.length;
						var title_new = title;
						var d = desc.length;
						var desc_new = desc;
						if(t > 35)
						{
							title_new = title.substring(0,35).concat("...");
						}
						if(d > 35)
						{
							desc_new = desc.substring(0,35).concat("...");
						}

						
						video_area=video_area.concat("<div class=\"media\"><div class=\"media-left media-top\"><img src=\""+image+"\" class=\"media-object\" style=\"width:120px\"></div><div class=\"media-body\"><h4 class=\"media-heading\">");
						video_area=video_area.concat(title_new).concat("</h4><p>").concat(desc_new).concat("</p>").concat("<a target=\"_blank\" href=\"").concat(link).concat("\"><span class=\"glyphicon glyphicon-hand-right\"></span></a></div></div>").concat("<hr>");
						
						
						if(i==2)
						{
							document.getElementById('insert6').innerHTML = video_area;
							break;
						}
						
						
					}
					
				}
		};
		xhttp.open("GET",video_url, true);
		xhttp.send();
		
	
		
  }
  
  
  function songs()
  {
  
  var x="";
  var t=Math.floor(Math.random() * (3-1 + 1) + 1);
  console.log(t);
  if(t==1)
  x="bollywood romantic songs";
  else if(t==2)
  x="bollywood sufian songs";
  else
  x="arjit songs songs 2018";
  
  
  var song_url="https://ibm-analyser.herokuapp.com/youtube/"+x;
  var song_area="";
  
		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200)
				{
					var response = xhttp.responseText;
					var res=JSON.parse(response);
					console.log(res);
					var title,desc,image,link;
					
					for(var i=0;i<res.videos.length;i++)
					{
						title=res.videos[i].title;
						desc=res.videos[i].description;
						image=res.videos[i].preview;
						link="https://"+res.videos[i].link;
						
						if(desc.length > 80)
						desc=desc.substr(0,80);
						if(desc=="")
						desc="Songs to calm down";
						
						var t = title.length;
						var title_new = title;
						var d = desc.length;
						var desc_new = desc;

						if(t > 35)
						{
							title_new = title.substring(0,35).concat("...");
						}
						if(d > 35)
						{
							desc_new = desc.substring(0,35).concat("...");
						}
						song_area=song_area.concat("<div class=\"media\"><div class=\"media-left media-top\"><img src=\""+image+"\" class=\"media-object\" style=\"width:120px\"></div><div class=\"media-body\"><h4 class=\"media-heading\">");
						song_area=song_area.concat(title_new).concat("</h4><p>").concat(desc_new).concat("</p>").concat("<a target=\"_blank\" href=\"").concat(link).concat("\"><span class=\"glyphicon glyphicon-hand-right\"></span></a></div></div>").concat("<hr>");

						
						
						if(i==2)
						{
						document.getElementById('insert7').innerHTML = song_area;
						break;
						}
						
						
					}
					
				}
		};
		xhttp.open("GET",song_url, true);
		xhttp.send();
		
	
		
  }
  
  
  function articles()
  {
  
	var emotion=feeling;

	if(emotion.toLowerCase == "neutral")
		emotion="joy";

  
	var articles_url="https://ibm-recommender.herokuapp.com/recommendations/"+emotion;
	var articles_area="";
  
		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200)
				{
					var response = xhttp.responseText;
					var res=JSON.parse(response);
					console.log(res);
					
					for(var i=0;i<res.articles.length;i++)
					{
						var temp=res.articles[i];
						/*console.log("temp: "+temp.length);
						var str="";
						var count = 0;

						for(var j=0;j<temp.length;j++)
						{
							if(temp.charAt(j) == ' ')
								count++;

							str = str.concat(temp.charAt(j));
							if(count == 6)
							{
								str.concat("\n");
								count=0;
							}
						}*/
						
						//console.log("str: "+str);
						articles_area=articles_area.concat("<div align=\"left\" class=\"container\"><a href=\"#demo").concat(i*9).concat("\" class=\"btn btn-info\" data-toggle=\"collapse\"><b>TIP &nbsp;#").concat(i+1).concat("</b>&nbsp; <span class=\"glyphicon glyphicon-plus\"></span>&nbsp;&nbsp;<span class=\"glyphicon glyphicon-minus\"></span></a>");
						//articles_area=articles_area.concat(" <div id=\"demo").concat(i*9).concat("\" class=\"collapse\">");
						//articles_area=articles_area.concat(temp);
						articles_area=articles_area.concat("</div>");
				
						

						
					}

					for(var i=0;i<5;i++)
					{
						var temp=res.articles[i];
						articles_area=articles_area.concat(" <div id=\"demo").concat(i*9).concat("\" class=\"collapse\">");
						articles_area=articles_area.concat(temp);
						articles_area=articles_area.concat("</div>");
						if(i==res.articles.length-1)
						{
							document.getElementById('insert9').innerHTML = articles_area;
							console.log("break");
							break;
						}
					}
					
				}
		};
		xhttp.open("GET",articles_url, true);
		xhttp.send();
	
  
  }
  
  function places()
  {
  
	//var location = "electronic city bangalore";
	console.log("places:"+lati+" "+longi);
	var location = lati+","+longi;
	//var food_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/food/"+location;
	//var places_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/natural/feature/"+location;
	//var worship_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/place/of/worship/"+location;
	var food_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/food/"+lati+"/"+longi;
	var places_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/natural/feature/"+lati+"/"+longi;
	var worship_url="https://ibmanalyser.eu-gb.mybluemix.net/users/n/place/of/worship/"+lati+"/"+longi;
	//var food_url = "http://localhost:3000/users/n/food/"+lati+"/"+longi;
	//var places_url = "http://localhost:3000/users/n/natural/feature/"+lati+"/"+longi;
	//var worship_url="http://localhost:3000/users/n/place/of/worship/"+lati+"/"+longi;
	var f_name=new Array();var f_pos=new Array();var n_name=new Array();var n_pos=new Array();var w_name=new Array();var w_pos=new Array();
	var places="";
	console.log(food_url);
	console.log(places_url);
	console.log(worship_url);
	
  
		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200)                           
				{
						var response = this.responseText;
						var res=JSON.parse(response);
						//console.log("Food--->"+JSON.stringify(res));
						
						for(var i=0;i<res.Hotels.length;i++)
						{
						
							console.log(res.Hotels[i].name);
							f_name[i]=res.Hotels[i].name;
							f_pos[i]=res.Hotels[i].formatted_address;
						}
						
									
						var xhttp = new XMLHttpRequest();
						xhttp.onreadystatechange = function() {
								if (this.readyState == 4 && this.status == 200)
								{
										var response = this.responseText;
										var res=JSON.parse(response);
										//console.log("Nature--->"+JSON.stringify(res));
										
										for(var i=0;i<res.Natural_Places.length;i++)
										{
										
											console.log(res.Natural_Places[i].name);
											n_name[i]=res.Natural_Places[i].name;
											n_pos[i]=res.Natural_Places[i].formatted_address;
										}
																	
																	
										var xhttp = new XMLHttpRequest();
										xhttp.onreadystatechange = function() {
												if (this.readyState == 4 && this.status == 200)
												{
													var response = this.responseText;
													var res=JSON.parse(response);
													//console.log("Temples--->"+JSON.stringify(res));
													
													console.log("------------------------");
													for(var i=0;i<res.Temples.length;i++)
														{
															console.log(res.Temples[i].name);
															w_name[i]=res.Temples[i].name;
															w_pos[i]=res.Temples[i].formatted_address;
														}
														
													places=places.concat("<div class=\"container\"><br>").concat("<button type=\"button\" class=\"btn btn-info\" data-toggle=\"collapse\" data-target=\"#demo\">Food Places</button><button type=\"button\" class=\"btn btn-info\" data-toggle=\"collapse\" data-target=\"#demo1\">Natural Places</button><button type=\"button\" class=\"btn btn-info\" data-toggle=\"collapse\" data-target=\"#demo2\">Worship Places</button>");
													places=places.concat("<div id=\"demo\" class=\"collapse\">");
													
													for(var j=0;j< f_name.length;j++)
													{
														var t = f_name[j].length;
														if(t > 10)
														{
															places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(f_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(f_name[j].substring(0,9).concat("...")).concat("</a>");
														}
														else
														{
															places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(f_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(f_name[j]).concat("</a>");
														}
													}
													
													places=places.concat("</div>");
													
													
													places=places.concat("<div id=\"demo1\" class=\"collapse\">");
													for(var j=0;j< n_name.length;j++)
													{
														var t = n_name[j].length;

														if(t > 10)
														{
														places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(n_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(n_name[j].substring(0,9).concat("...")).concat("</a>");
														}
														else
														{
															places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(n_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(n_name[j]).concat("</a>");
														}
													}

													places=places.concat("</div>");
													
													
													places=places.concat("<div id=\"demo2\" class=\"collapse\">");
													
													
													//console.log("--->"+w_name+"*****"+w_pos);
													for(var j=0;j< w_name.length;j++)
													{
														console.log("----->"+w_name[j]);
														var t = w_name[j].length;

														if(t > 10)
														{
														places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(w_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(w_name[j].substring(0,9).concat("...")).concat("</a>");
														}
														else
														{
															places=places.concat("<a target=\"_blank\"class=\"btn icon-btn btn-info\" href=\"").concat("https://www.google.co.in/maps/dir/").concat(location).concat("/").concat(w_pos[j]).concat("\"><span class=\"glyphicon btn-glyphicon glyphicon-share img-circle text-info\"></span>").concat(w_name[j]).concat("</a>");
														}

													}
													
													places=places.concat("</div>");
													places=places.concat("</div>");
													document.getElementById('insert8').innerHTML = places;
											
													
												}
										};
										xhttp.open("GET",worship_url, true);
										xhttp.send();
									
									
								}
						};
						xhttp.open("GET",places_url, true);
						xhttp.send();
					
					
				}
		};
		xhttp.open("GET",food_url, true);
		xhttp.send();
		
		
	}

	function yogas()
		{
		
		var emotion=feeling;

		var yogas_area="";
		
			yogas_area=yogas_area.concat("<div class=\"container\">");
		
			if(emotion.toLowerCase()=="anger" || emotion.toLowerCase()=="disgust")
			{
				var str = "Yogasana to control anger and disgust:".concat("\n");
				str = str.concat("1) Balasanna").concat("\n");
				str = str.concat("2) Matsyasana").concat("\n");
				str = str.concat("3) Savasana").concat("\n");
				str = str.concat("4) Sukhasana");

				yogas_area=yogas_area.concat("<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\"><ol class=\"carousel-indicators\">");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"1\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"2\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"3\"></li></ol>");
				
				yogas_area=yogas_area.concat("<div class=\"carousel-inner\">");
				yogas_area=yogas_area.concat("<div class=\"item active\"><img src=\"../assets/images/anger/Balasanna.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/anger/Matsyasana.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/anger/Savasana.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/anger/Sukhasana.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("</div>");
				
				yogas_area=yogas_area.concat("<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\"><span class=\"glyphicon glyphicon-chevron-left\"></span><span class=\"sr-only\">Previous</span></a><a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\"><span class=\"glyphicon glyphicon-chevron-right\"></span><span class=\"sr-only\">Next</span></a>");
				yogas_area=yogas_area.concat("</div></div>");
				
				document.getElementById('insert5').innerHTML = yogas_area;
				document.getElementById('yogatext').innerHTML = str;
			}
			else if(emotion.toLowerCase()=="fear" || emotion.toLowerCase()=="sad")
			{
				var str = "Yogasana to overcome fear and sadness:".concat("\n");
				str = str.concat("1) Adho-Mukha-Svanasana").concat("\n");
				str = str.concat("2) Balasanna").concat("\n");
				str = str.concat("3) Halasanna").concat("\n");
				str = str.concat("4) Savasana").concat("\n");
				str = str.concat("5) Sethu-Bandasanna").concat("\n");
				str = str.concat("6) Urdhva-Mukha-Svanasana").concat("\n");
				str = str.concat("7) Uttasanna");
			
				yogas_area=yogas_area.concat("<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\"><ol class=\"carousel-indicators\">");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"1\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"2\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"3\" ></li>")
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"4\" ></li>")
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"5\" ></li>")
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"6\"></li></ol>");
				
				yogas_area=yogas_area.concat("<div class=\"carousel-inner\">");
				yogas_area=yogas_area.concat("<div class=\"item active\"><img src=\"../assets/images/depression/Adho-Mukha-Svanasana.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Balasanna.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Halasanna.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Savasana.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Sethu-Bandasanna.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Urdhva-Mukha-Svanasana.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/depression/Uttasanna.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("</div>");
				
				yogas_area=yogas_area.concat("<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\"><span class=\"glyphicon glyphicon-chevron-left\"></span><span class=\"sr-only\">Previous</span></a><a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\"><span class=\"glyphicon glyphicon-chevron-right\"></span><span class=\"sr-only\">Next</span></a>");
				yogas_area=yogas_area.concat("</div></div>");
				
				document.getElementById('insert5').innerHTML = yogas_area;
				document.getElementById('yogatext').innerHTML = str;
			
			}
			else
			{
				var str = "Yogasana for Happiness:".concat("\n");
				str = str.concat("1) Cat-Cow Pose").concat("\n");
				str = str.concat("2) Crow Pose").concat("\n");
				str = str.concat("3) Pigeon Pose").concat("\n");
				str = str.concat("4) Warrier-2 Pose").concat("\n");
				str = str.concat("5) Wheel Pose");	
			
				yogas_area=yogas_area.concat("<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\"><ol class=\"carousel-indicators\">");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"1\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"2\" ></li>");
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"3\" ></li>")
				yogas_area=yogas_area.concat("<li data-target=\"#myCarousel\" data-slide-to=\"4\"></li></ol>");
				
				yogas_area=yogas_area.concat("<div class=\"carousel-inner\">");
				yogas_area=yogas_area.concat("<div class=\"item active\"><img src=\"../assets/images/happy/Cat-Cow.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/happy/Crow.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/happy/Pigeon.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/happy/Warrier-2.png\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("<div class=\"item\"><img src=\"../assets/images/happy/Wheel.jpg\" alt=\"Los Angeles\" style=\"width:100%;\"> </div>");
				yogas_area=yogas_area.concat("</div>");
				
				yogas_area=yogas_area.concat("<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\"><span class=\"glyphicon glyphicon-chevron-left\"></span><span class=\"sr-only\">Previous</span></a><a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\"><span class=\"glyphicon glyphicon-chevron-right\"></span><span class=\"sr-only\">Next</span></a>");
				yogas_area=yogas_area.concat("</div></div>");
				
				document.getElementById('insert5').innerHTML = yogas_area;
				document.getElementById('yogatext').innerHTML = str;
			
			
			}
		
		
		}
  


  	function drawBar()
  	{
  		var len = res[0].personality_insights.length;

  		var arr = new Array();
  		var meta = new Array(5);
  		var mr = 0; var mc=0;

        if(len > 5)
        	len = 5;

  		for(var i=0;i<len;i++)
  			arr[i] = new Array(8);

  		for(var i=0;i<5;i++)
  			meta[i] = new Array(6);

  		for(var i=0;i<res.length;i++)
		{
			if(tid == res[i].twitterid && mid == res[i].mediumid && iid == res[i].instagramid)
			{
				for(var j=0;j<res[i].personality_insights.length;j++)
				{
					if(j == 6)
						break;
					arr[j][0] = res[i].personality_insights[j].quality;
					arr[j][7] = "";

					for(k=0;k<res[i].personality_insights[j].children.length;k++)
					{
						meta[mr][mc++] = res[i].personality_insights[j].children[k].quality;
						arr[j][k+1] = res[i].personality_insights[j].children[k].percentile * 100;
					}
					mr++;
					mc=0;
				}
  			}
  		}

  		var temp ="";
  		console.log(meta+"\n");
  		console.log(len);
  		var t=0;
  		var tt=new Array();

  		for(var i=0;i<6;i++)
  		{
  			for(var j=0;j<len;j++)
  			{
  				console.log(j+" "+i+"\n");
  				console.log(meta[j][i]+"\n");

  				if(temp=="")
  				temp=meta[j][i];
  				else
  				temp = temp + ","+ meta[j][i];


  				if(j==len-1)
  				{
  					console.log("t="+t+" "+temp);
  					tt[t++]=temp;
  				}
  			}

  			temp = "";
  		}

        var options = {
          chart: {
            /*title: 'Personality Insights',
            subtitle: 'Profile Characteristics',*/
          },
          bars: 'vertical', // Required for Material Bar Charts.
          hAxis: {format: 'percentage'},
          height: 300,
          series: {6:{type: 'line'}}
        };

        var dataTable = new google.visualization.DataTable();
        dataTable.addColumn('string', 'property');
        dataTable.addColumn('number', tt[0]);
        dataTable.addColumn('number', tt[1]);
        dataTable.addColumn('number', tt[2]);
        dataTable.addColumn('number', tt[3]);
        dataTable.addColumn('number', tt[4]);
        dataTable.addColumn('number', tt[5]);
        // A column for custom tooltip content
        dataTable.addColumn({type: 'string', role: 'tooltip'});
        dataTable.addRows(arr);

        var chart = new google.charts.Bar(document.getElementById('insert'));
        chart.draw(dataTable, google.charts.Bar.convertOptions(options));
  		
  	}


  	function draw3DPieChart()
  	{
  		var entities = {};

  		for(var i=0;i<res.length;i++)
		{
			if(tid == res[i].twitterid && mid == res[i].mediumid && iid == res[i].instagramid)
			{
				for(var j=0;j<res[i].posts.length;j++)
				{
					if(! (res[i].posts[j].emotion in entities))
					{
						entities[res[i].posts[j].emotion] = 1;
					}
					else
					{
						entities[res[i].posts[j].emotion] = 1 + entities[res[i].posts[j].emotion];
					}
				}
			}
		}

		var count = 0;
		var temp = new Array();

		for ( property in entities )
		{ 
			temp[count] = property;
			count++;
		}

		var arr = new Array(count);

		for(var j=0;j<count;j++)
			arr[j] = new Array(2);

		for(var i=0;i<count;i++)
		{
			for(var j=0;j<2;j++)
			{
				if(j == 0)
					arr[i][j] = temp[i];
				else if(j == 1)
					arr[i][j] = entities[temp[i]];
			}
		}

        var dataTable = new google.visualization.DataTable();
        dataTable.addColumn('string', 'Year');
        dataTable.addColumn('number', 'Sales');
        // A column for custom tooltip content
        dataTable.addRows(arr);

        var options = {
          //title: 'instagram sentiments',
          is3D: true,
        };

        var chart = new google.visualization.PieChart(document.getElementById('insert1'));
        chart.draw(dataTable, options);
  	}

  	function drawExploding()
  	{
  		console.log("&&&&&&&&&&&&&& drawExploding &&&&&&&&&&&&&&& :"+res[0].twitterid+" "+res[0].mediumid+" "+res[0].instagramid);
  		var text = {};
  		var emotions = {};
  		console.log(tid+" "+mid+" "+iid+"\n");
  		for(var i=0;i<res.length;i++)
		{
			if(tid == res[i].twitterid && mid == res[i].mediumid && iid == res[i].instagramid)
			{
				for(var j=0;j<res[i].NLU_keywords.length;j++)
				{
					if(! (res[i].NLU_keywords[j].label in emotions))
					{
						console.log("IF Executed **** "+res[i].NLU_keywords[j].label+"\n");
						emotions[res[i].NLU_keywords[j].label] = 1;
						text[res[i].NLU_keywords[j].label] = res[i].NLU_keywords[j].text;
					}
					else
					{
						console.log("ELSE Executed **** "+res[i].NLU_keywords[j].label+"\n");
						emotions[res[i].NLU_keywords[j].label] = emotions[res[i].NLU_keywords[j].label] + 1;
						text[res[i].NLU_keywords[j].label] = text[res[i].NLU_keywords[j].label]+","+res[i].NLU_keywords[j].text;
					}
				}
			}
		}

		var count = 0;
		var temp = new Array();
		console.log("*****Emotions***"+emotions+"\n");
		console.log("******Text*******"+text+"\n");
		for ( property in emotions )
		{ 
			console.log("property:" + property);
			temp[count] = property;
			count++;
		}
		console.log(" COUNT :"+count);
		console.log("Temp: "+temp+"\n");
		var arr = new Array(count);

		for(var j=0;j<count;j++)
			arr[j] = new Array(3);

		for(var i=0;i<count;i++)
		{
			for(var j=0;j<3;j++)
			{
				if(j == 0)
					arr[i][j] = temp[i];
				else if(j == 1)
					arr[i][j] = emotions[temp[i]];
				else if(j == 2)
					arr[i][j] = text[temp[i]];

			}
		}

		var dataTable = new google.visualization.DataTable();
        dataTable.addColumn('string', 'Year');
        dataTable.addColumn('number', 'Sales');
        // A column for custom tooltip content
        dataTable.addColumn({type: 'string', role: 'tooltip'});
        dataTable.addRows(arr);

        console.log(arr);

         var c = arr[0][1];
         var cc = 0;

         for(var i=1;i<count;i++)
         {
         	if(c < arr[i][1])
         	{
         		c = arr[i][1];
         		cc = i;
         	}
         }

         console.log("cc:"+cc+" "+arr[cc][0]);

        var options = {
          //title: 'Emotions from Tweets',
          legend: 'none',
          pieSliceText: 'label',
          slices: {  1: {offset: 0.2},
          },
        };

        var chart = new google.visualization.PieChart(document.getElementById('insert2'));
        chart.draw(dataTable, options);
  	}

  	function drawDonutChart()
  	{
  		var entities = {};
  		var text = {};


  		for(var i=0;i<res.length;i++)
		{
			if(tid == res[i].twitterid && mid == res[i].mediumid && iid == res[i].instagramid)
			{
				for(var j=0;j<res[i].NLU_entities.length;j++)
				{
					if(! (res[i].NLU_entities[j].type in entities))
					{
						entities[res[i].NLU_entities[j].type] = 1;
						text[res[i].NLU_entities[j].type] = res[i].NLU_entities[j].text;
					}
					else
					{
						entities[res[i].NLU_entities[j].type] = entities[res[i].NLU_entities[j].type] + 1;
						text[res[i].NLU_entities[j].type] = text[res[i].NLU_entities[j].type] +","+res[i].NLU_entities[j].text;
					}
				}
			}
		}

		var count = 0;
		var temp = new Array();

		for ( property in entities )
		{ 
			temp[count] = property;
			count++;
		}

		var arr = new Array(count);

		for(var j=0;j<count;j++)
			arr[j] = new Array(3);

		for(var i=0;i<count;i++)
		{
			for(var j=0;j<3;j++)
			{
				if(j == 0)
					arr[i][j] = temp[i];
				else if(j == 1)
					arr[i][j] = entities[temp[i]];
				else if(j == 2)
					arr[i][j] = text[temp[i]];

			}
		}

        var dataTable = new google.visualization.DataTable();
        dataTable.addColumn('string', 'Year');
        dataTable.addColumn('number', 'Sales');
        // A column for custom tooltip content
        dataTable.addColumn({type: 'string', role: 'tooltip'});
        dataTable.addRows(arr);

        var options = {
          //title: 'Entities in your tweets',
          pieHole: 0.4,
        };

        var chart = new google.visualization.PieChart(document.getElementById('insert3'));
        chart.draw(dataTable, options);
  	}

     function drawChart()
    {
    		// drawing stacked bar graph
    	var x = new Array(7);
    	var name = new Array();
    	var size = new Array();
    	name[0] = "Jan";name[1] = "Feb";name[2] = "Mar";name[3] = "Apr";name[4] = "May";name[5] = "Jun";name[6] = "Jul";name[7] = "Aug";
    	name[8] = "Sep";name[9] = "Oct";name[10] = "Nov";name[11] = "Dec";
    	size[0] = 31;size[1] = 28;size[2] = 31;size[3] = 30;size[4] = 31;size[5] = 30;size[6] = 31;size[7] = 31;size[8] = 30;size[9] = 31;
    	size[10] = 30;size[11] = 31;
    	var yaxis = new Array();
		var date = new Date();
		console.log("date: "+date);
		var d = String(date).split(" ");
        console.log("d: "+d);
		var month = d[1];
		var day = d[2];
		if(day.charAt(0) == '0')
			day = day.substr(1,2);

		var tillday = day - 7;
		var curmonth="";var targetmonth="";

		if(tillday <= 0)
		{
			if(tillday < 0)
				for(var j=0;j<12;j++)
				{
					if(name[j] == month)
					{
						targetmonth = j;
						curmonth = j+1;
						tillday = tillday + size[j-1] + 1;
						break;
					}
				}
			else
				for(var j=0;j<12;j++)
				{
					if(name[j] == month)
					{
						targetmonth = j+1;
						curmonth = j+1;
						tillday = tillday + 1;
						break;
					}
				} 
		}
		else
		{
			for(var j=0;j<12;j++)
			{
				if(name[j] == month)
				{
					targetmonth = j+1;
					curmonth = j+1;
					tillday = tillday + 1;
					break;
				}
			} 	
		}

		for(var i=0;i<7;i++)
		{
			if(day - i > 0)
				yaxis[i] = (day-i) + "-" + name[curmonth - 1];
			else if(day - i == 0)
				yaxis[i] = size[curmonth - 2] + "-" + name[curmonth-2];
			else
				yaxis[i] = (day - i + size[curmonth - 2]) + "-" + name[curmonth - 2];
		}

		console.log("Date:"+curmonth+" "+targetmonth+" "+tillday+" "+day);

		for (var i = 0; i < x.length; i++)
		  	x[i] = new Array(6);

		for(var i=0;i<7;i++)
		{
			for(var j=0;j<6;j++)
				x[i][j] = 0;
		}

		for(var i=0;i<res.length;i++)
		{
			if(tid == res[i].twitterid && mid == res[i].mediumid && iid == res[i].instagramid)
			{
				for(var j=0;j<res[i].tweets.length;j++)
				{
					var td = res[i].tweets[j].time;
					var tdm = td.split("-")[1];
					var tdd = td.split("-")[2];

					if(tdm.charAt(0) == '0')
						tdm = tdm.substr(1,2);
					if(tdd.charAt(0) == '0')
						tdd = tdd.substr(1,2);

					console.log("tdd = " + tdd+" tillday"+tillday+" day:"+day+"\n");
					console.log("Cur Month = " + curmonth+" targetmonth "+targetmonth +" tdm"+tdm+"\n");
					if((tdd >= tillday && targetmonth == curmonth) || ((targetmonth == curmonth - 1) && (tdd >= tillday || tdd.length == 1)))
						for(var k=0;k<res[i].tweets[j].tone_analyser.length;k++)
						{
							var local = res[i].tweets[j].tone_analyser[k].name;
							var temp = day - tdd;

							if(tdm != curmonth && tdd.length == 1)
								break;

							if(curmonth == targetmonth && tdm != curmonth)
								break;

							if(temp < 0)
								temp = parseInt(day) + size[targetmonth - 1] - parseInt(tdd,10);
							console.log("temp:" + temp+" "+local);
									if(local == "Neutral")
										x[temp][5] = x[temp][5] + 1;
									else if(local == "Sad")
										x[temp][1] = x[temp][1] + 1;
									else if(local == "Anger")
										x[temp][2] = x[temp][2] + 1;
									else if(local == "Fear")
										x[temp][3] = x[temp][3] + 1;
									else if(local == "Disgust")
										x[temp][4] = x[temp][4] + 1;
									else
										x[temp][0] = x[temp][0] + 1;

						}

				}
			}
		}

		var data = google.visualization.arrayToDataTable([
        ['Emotion', 'Happy', 'Sad', 'Anger', 'Fear',
         'Disgust', 'Neutral', { role: 'annotation' } ],
        [yaxis[0], x[0][0], x[0][1], x[0][2], x[0][3], x[0][4], x[0][5], ''],
        [yaxis[1], x[1][0], x[1][1], x[1][2], x[1][3], x[1][4], x[1][5], ''],
        [yaxis[2], x[2][0], x[2][1], x[2][2], x[2][3], x[2][4], x[2][5], ''],
        [yaxis[3], x[3][0], x[3][1], x[3][2], x[3][3], x[3][4], x[3][5], ''],
        [yaxis[4], x[4][0], x[4][1], x[4][2], x[4][3], x[4][4], x[4][5], ''],
        [yaxis[5], x[5][0], x[5][1], x[5][2], x[5][3], x[5][4], x[5][5], ''],
        [yaxis[6], x[6][0], x[6][1], x[6][2], x[6][3], x[6][4], x[6][5], '']
      ]);

      var options = {
        width: 600,
        height: 400,
        legend: { position: 'top', maxLines: 3 },
        bar: { groupWidth: '75%' },
        //title: 'Date-wise Tweets',
        isStacked: 'percent'
      };

      var chart = new google.visualization.ColumnChart(document.getElementById("insert4"));
      //var chart = new google.visualization.BarChart(document.getElementById('insert4'));
      chart.draw(data, options);
    }

  	
  </script>
</body>
</html>
